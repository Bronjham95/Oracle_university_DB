-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-10-25 20:46:13 GMT+03:00
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE academ_per (
    academ_id  NUMBER NOT NULL,
    student_id INTEGER NOT NULL,
    point      INTEGER NOT NULL,
    test       VARCHAR2(15) NOT NULL
);

CREATE UNIQUE INDEX i_ap_student_id ON
    academ_per (
        student_id
    ASC );

ALTER TABLE academ_per ADD CONSTRAINT pk_ap PRIMARY KEY ( academ_id );

ALTER TABLE academ_per ADD CONSTRAINT u_academ_per UNIQUE ( student_id );

CREATE TABLE department (
    dep_id   INTEGER NOT NULL,
    inst_id  INTEGER NOT NULL,
    dep_name VARCHAR2(50) NOT NULL,
    dep_head VARCHAR2(90) NOT NULL
);

ALTER TABLE department ADD CONSTRAINT pk_department PRIMARY KEY ( dep_id );

ALTER TABLE department ADD CONSTRAINT u_department UNIQUE ( inst_id,
                                                            dep_id );

CREATE TABLE department_sheet (
    department_sheet_id NUMBER NOT NULL,
    ap_id               INTEGER NOT NULL,
    dis_id              INTEGER NOT NULL,
    student_id          INTEGER NOT NULL,
    group_id            INTEGER NOT NULL,
    spec_id             INTEGER NOT NULL,
    teacher_id          INTEGER NOT NULL
);

CREATE UNIQUE INDEX i_ds_ap_id_student_id ON
    department_sheet (
        ap_id
    ASC,
        student_id
    ASC );

CREATE UNIQUE INDEX i_ds_dis_id ON
    department_sheet (
        dis_id
    ASC );

CREATE UNIQUE INDEX i_ds_group_id_spec_id ON
    department_sheet (
        group_id
    ASC,
        spec_id
    ASC );

CREATE UNIQUE INDEX i_ds_teacher_id ON
    department_sheet (
        teacher_id
    ASC );

ALTER TABLE department_sheet ADD CONSTRAINT pk_department_sheet PRIMARY KEY ( department_sheet_id );

ALTER TABLE department_sheet
    ADD CONSTRAINT u_department_sheet UNIQUE ( ap_id,
                                               student_id,
                                               dis_id );

CREATE TABLE discipline (
    dis_id   INTEGER NOT NULL,
    dis_name VARCHAR2(50) NOT NULL,
    time     INTEGER NOT NULL,
    term     INTEGER NOT NULL,
    t_report VARCHAR2(15) NOT NULL
);

ALTER TABLE discipline ADD CONSTRAINT pk_discipline PRIMARY KEY ( dis_id );

CREATE TABLE institute (
    inst_id   INTEGER NOT NULL,
    inst_name VARCHAR2(50) NOT NULL,
    inst_dean VARCHAR2(90) NOT NULL,
    telephone VARCHAR2(15) NOT NULL,
    "E-MAIL"  VARCHAR2(50) NOT NULL
);

ALTER TABLE institute ADD CONSTRAINT pk_institute PRIMARY KEY ( inst_id );

CREATE TABLE passport (
    pass_id  INTEGER NOT NULL,
    pass_num INTEGER NOT NULL,
    pass_sn  INTEGER,
    pass_reg VARCHAR2(150) NOT NULL
);

ALTER TABLE passport ADD CONSTRAINT pk_passport PRIMARY KEY ( pass_id );

CREATE TABLE person (
    person_id    INTEGER NOT NULL,
    firstname    VARCHAR2(30) NOT NULL,
    lastname     VARCHAR2(30) NOT NULL,
    patronimic   VARCHAR2(30),
    fact_address VARCHAR2(50) NOT NULL
);

ALTER TABLE person ADD CONSTRAINT pk_person PRIMARY KEY ( person_id );

CREATE TABLE specialization (
    spec_id   INTEGER NOT NULL,
    spec_name VARCHAR2(50) NOT NULL,
    spec_lvl  VARCHAR2(20) NOT NULL
);

ALTER TABLE specialization ADD CONSTRAINT pk_specialization PRIMARY KEY ( spec_id );

CREATE TABLE student (
    student_id INTEGER NOT NULL,
    person_id  INTEGER NOT NULL,
    pass_id    INTEGER NOT NULL,
    begin_date DATE NOT NULL
);

CREATE UNIQUE INDEX i_student_pass_id ON
    student (
        pass_id
    ASC );

CREATE UNIQUE INDEX i_student_person_id ON
    student (
        person_id
    ASC );

ALTER TABLE student ADD CONSTRAINT pk_student PRIMARY KEY ( student_id );

CREATE TABLE student_group (
    group_id   INTEGER NOT NULL,
    group_name VARCHAR2(10) NOT NULL,
    spec_id    INTEGER NOT NULL
);

CREATE UNIQUE INDEX student_group__idx ON
    student_group (
        spec_id
    ASC );

ALTER TABLE student_group ADD CONSTRAINT student_group_pk PRIMARY KEY ( group_id );

ALTER TABLE student_group ADD CONSTRAINT u_student_group_spec_id UNIQUE ( group_id,
                                                                          spec_id );

CREATE TABLE teacher (
    teacher_id INTEGER NOT NULL,
    person_id  INTEGER NOT NULL,
    pass_id    INTEGER NOT NULL,
    position   VARCHAR2(50) NOT NULL,
    ac_degree  VARCHAR2(50),
    inst_id    INTEGER NOT NULL,
    dep_id     INTEGER NOT NULL
);

CREATE UNIQUE INDEX i_teacher_pass_id ON
    teacher (
        pass_id
    ASC );

CREATE UNIQUE INDEX i_teacher__person_id ON
    teacher (
        person_id
    ASC );

CREATE UNIQUE INDEX i_teacher__dep_id_inst_id ON
    teacher (
        inst_id
    ASC,
        dep_id
    ASC );

ALTER TABLE teacher ADD CONSTRAINT pk_teacher PRIMARY KEY ( teacher_id );

ALTER TABLE academ_per
    ADD CONSTRAINT fk_ap FOREIGN KEY ( student_id )
        REFERENCES student ( student_id );

ALTER TABLE department
    ADD CONSTRAINT fk_dep_inst FOREIGN KEY ( inst_id )
        REFERENCES institute ( inst_id );

ALTER TABLE department_sheet
    ADD CONSTRAINT fk_ds_academ_per FOREIGN KEY ( student_id )
        REFERENCES academ_per ( student_id );

ALTER TABLE department_sheet
    ADD CONSTRAINT fk_ds_discipline FOREIGN KEY ( dis_id )
        REFERENCES discipline ( dis_id );

ALTER TABLE department_sheet
    ADD CONSTRAINT fk_ds_student_group FOREIGN KEY ( group_id,
                                                     spec_id )
        REFERENCES student_group ( group_id,
                                   spec_id );

ALTER TABLE department_sheet
    ADD CONSTRAINT fk_ds_teacher FOREIGN KEY ( teacher_id )
        REFERENCES teacher ( teacher_id );

ALTER TABLE student_group
    ADD CONSTRAINT fk_sg_specialization FOREIGN KEY ( spec_id )
        REFERENCES specialization ( spec_id );

ALTER TABLE student
    ADD CONSTRAINT fk_student_pass FOREIGN KEY ( pass_id )
        REFERENCES passport ( pass_id );

ALTER TABLE student
    ADD CONSTRAINT fk_student_person FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE teacher
    ADD CONSTRAINT fk_teacher_dep FOREIGN KEY ( inst_id,
                                                dep_id )
        REFERENCES department ( inst_id,
                                dep_id );

ALTER TABLE teacher
    ADD CONSTRAINT fk_teacher_pass FOREIGN KEY ( pass_id )
        REFERENCES passport ( pass_id );

ALTER TABLE teacher
    ADD CONSTRAINT fk_teacher_person FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

CREATE SEQUENCE academ_per_academ_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER academ_per_academ_id_trg BEFORE
    INSERT ON academ_per
    FOR EACH ROW
    WHEN ( new.academ_id IS NULL )
BEGIN
    :new.academ_id := academ_per_academ_id_seq.nextval;
END;
/

CREATE SEQUENCE department_sheet_department_sh START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER department_sheet_department_sh BEFORE
    INSERT ON department_sheet
    FOR EACH ROW
    WHEN ( new.department_sheet_id IS NULL )
BEGIN
    :new.department_sheet_id := department_sheet_department_sh.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                            11
-- ALTER TABLE                             27
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          2
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
